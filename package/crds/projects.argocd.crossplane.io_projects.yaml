apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: projects.projects.argocd.crossplane.io
spec:
  group: projects.argocd.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - argocd
    kind: Project
    listKind: ProjectList
    plural: projects
    singular: project
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Project is a managed resource that represents an ArgoCD Git Project
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ProjectSpec defines the desired state of an ArgoCD Project.
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ProjectParameters define the desired state of an ArgoCD Project
                properties:
                  clusterResourceBlacklist:
                    description: ClusterResourceBlacklist contains list of blacklisted cluster level resources
                    items:
                      description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                      required:
                      - group
                      - kind
                      type: object
                    type: array
                  clusterResourceWhitelist:
                    description: ClusterResourceWhitelist contains list of whitelisted cluster level resources
                    items:
                      description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                      required:
                      - group
                      - kind
                      type: object
                    type: array
                  description:
                    description: Description contains optional project description
                    type: string
                  destinations:
                    description: Destinations contains list of destinations available for deployment
                    items:
                      description: ApplicationDestination holds information about the application's destination
                      properties:
                        name:
                          description: Name is an alternate way of specifying the target cluster by its symbolic name
                          type: string
                        namespace:
                          description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                          type: string
                        server:
                          description: Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
                          type: string
                      type: object
                    type: array
                  name:
                    type: string
                  namespaceResourceBlacklist:
                    description: NamespaceResourceBlacklist contains list of blacklisted namespace level resources
                    items:
                      description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                      required:
                      - group
                      - kind
                      type: object
                    type: array
                  namespaceResourceWhitelist:
                    description: NamespaceResourceWhitelist contains list of whitelisted namespace level resources
                    items:
                      description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                      required:
                      - group
                      - kind
                      type: object
                    type: array
                  orphanedResources:
                    description: OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
                    properties:
                      ignore:
                        description: Ignore contains a list of resources that are to be excluded from orphaned resources monitoring
                        items:
                          description: OrphanedResourceKey is a reference to a resource to be ignored from
                          properties:
                            group:
                              type: string
                            kind:
                              type: string
                            name:
                              type: string
                          type: object
                        type: array
                      warn:
                        description: Warn indicates if warning condition should be created for apps which have orphaned resources
                        type: boolean
                    type: object
                  roles:
                    description: Roles are user defined RBAC roles associated with this project
                    items:
                      description: ProjectRole represents a role that has access to a project
                      properties:
                        description:
                          description: Description is a description of the role
                          type: string
                        groups:
                          description: Groups are a list of OIDC group claims bound to this role
                          items:
                            type: string
                          type: array
                        jwtTokens:
                          description: JWTTokens are a list of generated JWT tokens bound to this role
                          items:
                            description: JWTToken holds the issuedAt and expiresAt values of a token
                            properties:
                              exp:
                                format: int64
                                type: integer
                              iat:
                                format: int64
                                type: integer
                              id:
                                type: string
                            required:
                            - iat
                            type: object
                          type: array
                        name:
                          description: Name is a name for this role
                          type: string
                        policies:
                          description: Policies Stores a list of casbin formated strings that define access policies for the role in the project
                          items:
                            type: string
                          type: array
                      required:
                      - name
                      type: object
                    type: array
                  signatureKeys:
                    description: SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync
                    items:
                      description: SignatureKey is the specification of a key required to verify commit signatures with
                      properties:
                        keyID:
                          description: The ID of the key in hexadecimal notation
                          type: string
                      required:
                      - keyID
                      type: object
                    type: array
                  sourceRepos:
                    description: SourceRepos contains list of repository URLs which can be used for deployment
                    items:
                      type: string
                    type: array
                  syncWindows:
                    description: SyncWindows controls when syncs can be run for apps in this projecprojectst
                    items:
                      description: SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps
                      properties:
                        applications:
                          description: Applications contains a list of applications that the window will apply to
                          items:
                            type: string
                          type: array
                        clusters:
                          description: Clusters contains a list of clusters that the window will apply to
                          items:
                            type: string
                          type: array
                        duration:
                          description: Duration is the amount of time the sync window will be open
                          type: string
                        kind:
                          description: Kind defines if the window allows or blocks syncs
                          type: string
                        manualSync:
                          description: ManualSync enables manual syncs when they would otherwise be blocked
                          type: boolean
                        namespaces:
                          description: Namespaces contains a list of namespaces that the window will apply to
                          items:
                            type: string
                          type: array
                        schedule:
                          description: Schedule is the time the window will begin, specified in cron format
                          type: string
                      type: object
                    type: array
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ProjectStatus represents the observed state of an ArgoCD Project.
            properties:
              atProvider:
                description: ProjectObservation represents an argocd repository.
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
